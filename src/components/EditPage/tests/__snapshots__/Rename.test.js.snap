// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Rename 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Rename
    initValue=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Rename
</h3>,
        <input
          autoFocus={true}
          onChange={[Function]}
          type="text"
          value=""
/>,
        <button
          onClick={[Function]}
>
          Save
</button>,
        <button
          onClick={undefined}
>
          Cancel
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Rename",
        },
        "ref": null,
        "rendered": "Rename",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoFocus": true,
          "onChange": [Function],
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Save",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Save",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Cancel",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "Cancel",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Rename
</h3>,
          <input
            autoFocus={true}
            onChange={[Function]}
            type="text"
            value=""
/>,
          <button
            onClick={[Function]}
>
            Save
</button>,
          <button
            onClick={undefined}
>
            Cancel
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rename",
          },
          "ref": null,
          "rendered": "Rename",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoFocus": true,
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Save",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Save",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Cancel",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "Cancel",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
